{"version":3,"sources":["components/TodoElement.jsx","components/TodosList.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoElement","props","useState","isDone","setDone","style","done","display","className","onClick","text","e","stopPropagation","update","id","delete","TodosList","list","map","todo","index","updateTodo","deleteTodo","App","todoList","setTodoList","buttonText","setButtonText","todoText","setTodoText","placeholder","setPlaceholder","updateButtonText","newTodoList","splice","type","onChange","target","value","trim","push","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NA0BeA,MAxBf,SAAqBC,GACjB,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAQ,CACVC,KAAM,CACFC,QAAS,UAMjB,OAHIJ,IACAE,EAAMC,KAAKC,QAAU,QAGrB,qBAAIC,UAAU,eAAeC,QAAS,kBAAIL,GAASD,IAAnD,UACI,gCACI,mBAAGE,MAAOA,EAAMC,KAAME,UAAU,OAAhC,kBACA,mBAAGA,UAAU,YAAb,SAA0BP,EAAMS,UAEpC,gCACI,wBAAQF,UAAU,eAAeC,QAAS,SAACE,GAAKA,EAAEC,kBAAmBX,EAAMY,OAAOZ,EAAMa,KAAxF,oBACA,wBAAQL,QAAS,SAACE,GAAKA,EAAEC,kBAAmBX,EAAMc,OAAOd,EAAMa,KAA/D,2BCVDE,MARf,SAAmBf,GACf,OACI,oBAAIO,UAAU,YAAd,SACKP,EAAMgB,KAAKC,KAAK,SAACC,EAAMC,GAAP,OAAiB,cAAC,EAAD,CAA2BN,GAAIM,EAAOV,KAAMS,EAAMN,OAAQZ,EAAMoB,WAAYN,OAAQd,EAAMqB,YAAxEF,EAAM,S,MCsDvDG,MAvDf,WAEE,MAAgCrB,mBAAS,IAAzC,mBAAOsB,EAAP,KAAiBC,EAAjB,KACA,EAAoCvB,mBAAS,OAA7C,mBAAOwB,EAAP,KAAmBC,EAAnB,KACA,EAAgCzB,mBAAS,IAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KACA,EAAsC3B,mBAAS,2BAA/C,mBAAO4B,EAAP,KAAoBC,EAApB,KAEMC,EAAmB,WACP,QAAbN,GACDK,EAAe,sDACfJ,EAAc,YAGdI,EAAe,wBACfJ,EAAc,SAuBZL,EAAa,SAACR,GAClB,IAAMmB,EAAW,YAAOT,GACxBS,EAAYC,OAAOpB,EAAI,GACvBW,EAAYQ,IAGd,OACE,sBAAKzB,UAAU,MAAf,UACE,4CACA,sBAAKA,UAAU,aAAf,UACE,uBAAO2B,KAAK,OAAOrB,GAAG,cAAcsB,SAAU,SAACzB,GAAKkB,EAAYlB,EAAE0B,OAAOC,QAASA,MAAOV,EAAUE,YAAaA,IAChH,wBAAQrB,QA9BO,WACnB,IAAMC,EAAOkB,EAASW,OACtB,GAAG7B,EAAM,CACP,IAAMuB,EAAW,YAAOT,GACxBS,EAAYO,KAAK9B,GACjBe,EAAYQ,GACZJ,EAAY,IACK,UAAdH,GAAwBM,SAG3BS,MAAM,+BACNZ,EAAY,KAmBV,SAAgCH,OAElC,cAAC,EAAD,CAAUlB,UAAU,YAAYS,KAAMO,EAAUH,WAlBjC,SAACP,GAClBe,EAAYL,EAASV,IACrBkB,IACAV,EAAWR,IAe+DQ,WAAYA,QC1C3EoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c61fafe3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction TodoElement(props) {\r\n    const [isDone, setDone] = useState(false);\r\n    const style = {\r\n        done: {\r\n            display: 'block'\r\n        }\r\n    }\r\n    if(!isDone){\r\n        style.done.display = 'none';\r\n    }\r\n    return (\r\n        <li className='todo-element' onClick={()=>setDone(!isDone)}>\r\n            <div>\r\n                <p style={style.done} className='done'>Done</p>\r\n                <p className='todo-text'>{props.text}</p>\r\n            </div>\r\n            <div>\r\n                <button className='updateButton' onClick={(e)=>{e.stopPropagation(); props.update(props.id)}} >Update</button>\r\n                <button onClick={(e)=>{e.stopPropagation(); props.delete(props.id)}} >Delete</button>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default TodoElement;","import TodoElement from './TodoElement';\r\n\r\nfunction TodosList(props) {\r\n    return (\r\n        <ul className='todo-list'>\r\n           { props.list.map( (todo, index) => <TodoElement key={index+1} id={index} text={todo} update={props.updateTodo} delete={props.deleteTodo} /> )}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default TodosList;","import TodoList from './components/TodosList';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [todoList, setTodoList] = useState([]);\n  const [buttonText, setButtonText] = useState('Add');\n  const [todoText, setTodoText] = useState('');\n  const [placeholder, setPlaceholder] = useState('Enter your Todo Here...');\n\n  const updateButtonText = () =>{\n    if(buttonText==='Add'){\n      setPlaceholder('Update your Todo or it will be updated as empty...');\n      setButtonText('Update');\n    }\n    else{\n      setPlaceholder('Enter your Todo Here');\n      setButtonText('Add');\n    }\n  }\n\n  const populateTodo = () => {\n    const text = todoText.trim();\n    if(text) {\n      const newTodoList = [...todoList];\n      newTodoList.push(text);\n      setTodoList(newTodoList);\n      setTodoText('');\n      if(buttonText == 'Update') updateButtonText();\n    }\n    else{\n      alert('Fill the Text Box correctly');\n      setTodoText('');\n    }\n  }\n  const updateTodo = (id) =>{\n    setTodoText(todoList[id]);\n    updateButtonText();\n    deleteTodo(id);\n  }\n  const deleteTodo = (id) =>{\n    const newTodoList = [...todoList];\n    newTodoList.splice(id, 1);\n    setTodoList(newTodoList);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Todos List</h1>\n      <div className='form-group'>\n        <input type=\"text\" id=\"todo-editor\" onChange={(e)=>{setTodoText(e.target.value)}} value={todoText} placeholder={placeholder} />\n        <button onClick={populateTodo}>{buttonText}</button>\n      </div>\n      <TodoList className='todo-list' list={todoList} updateTodo={updateTodo} deleteTodo={deleteTodo} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}